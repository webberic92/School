G. Bracha. An Asynchronous [(n-1)/3]-Resilient Consensus Protocol. In PODC’84



References
Aiyar, K., Halgamuge, M., & Mohammad, A. (2021). Probability Distribution Model to Analyze the Trade-off between Scalability and Security of Sharding-Based Blockchain Networks. IEEE 18th Annual Consumer Communications & Networking Conference, pp. 1-6. https://doi.org/10.1109/CCNC49032.2021.9369563

Baird, L., & Luykx, A. (2020). The Hashgraph Protocol: Efficient Asynchronous BFT for High-Throughput Distributed Ledgers. International Conference on Omni-layer Intelligent Systems, pp. 1-7. https://doi.org/10.1109/COINS49042.2020.9191430

Beikverdi, A., & Song, J. (2015). Trend of centralization in Bitcoin's distributed network. Proceedings of the 2015 IEEE/ACIS 16th International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing, pp. 1-6. https://doi.org/10.1109/SNPD.2015.7176229

Duan, S., Reiter, M., & Zhang, H. (2018). BEAT: Asynchronous BFT Made Practical. In ACM SIGSAC Conference on Computer and Communications Security, pp. 2028–2041. https://doi.org/10.1145/3243734.3243812

Fischer, M., Lynch, N., & Paterson, M. (1985). Impossibility of Distributed Consensus with One 
Faulty Process. Journal of the ACM, pp. 374–382.

Hood, K., Oglio, J., Nesterenko, M., & Sharma, G. (2021). Partitionable Asynchronous Cryptocurrency Blockchain. IEEE International Conference on Blockchain and Cryptocurrency, pp. 1-9. https://doi.org/10.1109/ICBC51069.2021.9461080

Jia, Y., Xu, C., Wu, Z., Feng, Z., Chen, Y., & Yang, S. (2022) Measuring Decentralization in Emerging Public Blockchains. International Wireless Communications and Mobile Computing, pp. 137-141. https://doi.org/10.1109/IWCMC55113.2022.9825341

Kaushal, P., Bagga, A., & Sobti, R. (2017). Evolution of Bitcoin and Security Risk in Bitcoin Wallets. International Conference on Computer, Communications and Electronics, pp. 172-177. https://doi.org/10.1109/COMPTELIX.2017.8003959

Knudsen, H., Li, J., Notland, J., Haro, P., & Ræder, T. (2021). High-Performance Asynchronous Byzantine Fault Tolerance Consensus Protocol. IEEE International Conference on Blockchain, pp. 476-483. https://doi.org/10.1109/Blockchain53845.2021.00073

Kuo, P., Chung, H., Chao, T., & Cheng, C. (2020). Fair Byzantine Agreements for Blockchains. IEEE Access, pp. 70746-70761. https://doi.org/10.1109/ACCESS.2020.2986824

Kwon, Y., Liu, J., Kim, M., Song, D., & Kim, Y. (2019). Impossibility of Full Decentralization in Permissionless Blockchains. Proceedings of ACM Conference on Advances in Financial Technologies, pp. 110–123. https://doi.org/10.1145/3318041.3355463

Lamport, L., Shostak, R., & Pease, M. (1982). The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, pp. 382-401.

Lin, Q., Li, C., Zhao, X., & Chen, X. (2021). Measuring Decentralization in Bitcoin and Ethereum using Multiple Metrics and Granularities. IEEE 37th International Conference on Data Engineering Workshops, pp. 80-87. https://doi.org/10.1109/ICDEW53142.2021.00022 

Miller, A., Xia, Y., Croman, K., Shi, E., & Song, D. (2016). The Honey Badger of BFT Protocols. Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, pp. 31–42. https://doi.org/10.1145/2976749.2978399

Wu, K., Peng, B., Xie, H., & Huang, Z. (2019). An Information Entropy Method to Quantify the Degrees of Decentralization for Blockchain Systems. International Conference on Electronics Information and Emergency Communication, pp. 1–6. https://doi.org/10.1109/ICEIEC.2019.8784631



BEAT protocol (Duan et al., 2018).
“all our BEAT instances significantly outperform, in terms of both latency and throughput, HoneyBadgerBFT, the most efficient asynchronous BFT known.”

ABFT protocol (Knudsen et al., 2021).
“Honeybadger was the first practical, asynchronous Byzantine Fault Tolerance (BFT) consensus protocol, achieving high scalability and robustness without making any timing assumptions regarding the network.”
“show that ABFT provides considerably higher performance, significantly lower computational overhead, and greater scalability than its predecessors.”
G. Bracha. An Asynchronous [(n-1)/3]-Resilient Consensus Protocol. In PODC’84, pages
154–162, 1984.
