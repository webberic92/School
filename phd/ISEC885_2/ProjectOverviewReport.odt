Overview

   Project Introduction and Objectives

    Resource Projections

Milestones and Deliverables

    Scheduled completions

Introduction:
	The exploratory research for the Fall 2023 ISEC 885 course aims to develop a problem direction for a doctoral research idea concept paper, leading to an idea paper, with the ultimate objective of improving certain aspects within the field of asynchronous consensus such as throughput, latency, security, or decentralization, yet to be determined. Asynchronous consensus refers to the ability of a distributed system to reach an agreement without any timing assumptions even in the events of faults, message delays, and unpredictable delivery times. Asynchronous consensus ensures that the system can reach an agreement even when there is no bound on the time it takes for messages to be delivered or for nodes to respond. Not knowing the bound on the time in an asynchronous setting directly contrast synchronous consensus, which does know its bound on time, along with partially-synchronous consensus, which knows there is a bound on time, but doesn't know what that bound is (Miller et al., 2016 "Many Forms of Timing Assumptions," p. 3). A problem with synchronous or partially synchronous protocols are their failure or suffering of performance degradation when network conditions are unpredictable, such as on the open internet. This is directly supported in the works of the Honey Badger Byzantine Fault Tolerant (HBFT) protocol whose research highlights the ability to bring down a well researched partially-synchronous protocol called Practical Byzantine Fault Tolerant (PBFT). This is done by the means of an adversarial network scheduler abusing the leader selection and halting progress by making the intermittent synchronicity connections too small for the network to catch up (Miller et al., 2016 "When Weak Synchrony Fails," p. 4). In contrast, the advantage of asynchronous consensus and by nature the HBFT, is that during these smaller intermittent windows of synchronicity, the HBFT still makes progress. Highlighting the benefit that the HBFT can synchronize relatively instantaneously when the network connects again, in contrast to synchronous protocols which might not have a long enough synchronization window to catch up. It is important to note that the HBFT is significant to the realm of asynchronous consensus as it touts itself as “the first practical asynchronous Byzantine Fault Tolerant (BFT) protocol, which guarantees liveness without making any timing assumptions” (Miller et al., 2016 "Abstract," p. 1). This is relevant because of how HBFT’s asynchronous consensus relates to the Fischer, Lynch, Paterson (FLP) theorem. The FLP theorem states “an asynchronous distributed system where even a single process can crash, it is impossible to achieve consensus materialistically if there is a possibility of message delays and process failures.”(Fischer et al., 1985) It is crucial to note that HBFT argues to practically get around the FLP theorem asynchronously by using cryptographic techniques and assumptions, such as threshold signatures, rather than strictly refuting the FLP result. This is supported in future asynchronous consensus research such as in another asynchronous consensus protocol called BEAT, who states “However, state machine replication cannot be achieved in asynchronous environments (Fischer et al., 1985), unless it uses randomization to circumvent this impossibility result. HoneyBadgerBFT and BEAT fall into this category.”(Duan et al., 2018 “Related Work” p. 3 ) From this statement we can see research that supports the FLP theorem can be circumvented through randomization and that other research has supported HBFT’s claims of being one of the first practical asynchronous BFT protocols to do so. HBFT will be chosen as a bench mark for this research as it has been done before in the field of asynchronous consensus through newer protocols such as BEAT, DUMBO, and Asynchronous Byzantine Fault Tolerance (ABFT) that will later be discussed (Knudsen et al., 2021,Duan et al., 2018, and Guo, Lu, Tang, Xu, & Zhang, 2020). The ABFT protocol was chosen for the upper bounds of this research because it is an amalgamation of the works of  previous asynchronous consensus protocols like HBFT, BEAT, and DUMBO (Knudsen, Li, Notland, Haro, & Ræder, 2021 "ABFT Design and Implementation on EC2" p. 9). Noting that ABFT claims empirical gains in the fields of throughput and latency when compared to HBFT, DUMBO, and inherently BEAT (Knudsen et al., 2021 “Results of RQ1” p. 6).
Objectives:
	The objective of the exploratory research, conducted as part of the Fall 2023 ISEC 885 course, is to establish a problem direction for a doctoral research idea concept paper, which will lead to a research idea paper. The objective is centered around the improvement of the field of Asynchronous Byzantine Fault Tolerance through the ABFT protocol. The final outcome will be a concrete problem, need, and goal. The technical goals of the research is to implement and deploy the HBFT protocol to create a baseline. This baseline will serve as a reference point for comparing both the original work of HBFT and any future research endeavors. After creating a baseline the next technical goal will be replicating and contributing to ABFT such that previous results can be compared to and new research proposed.
Resource Projections:
	The research project is anticipated to require the following resources:
Time: 3 to 4 years for comprehensive research, experimentation, and thesis write-up.
Personnel: The primary researcher, advisors, and potential collaboration with industry leaders for discussions and review.
Computational Resources: Access to computing clusters for simulation experiments such as AWS, Azure, and Tor.
Literature: Readings of academic papers, research articles, and technical documentation related to consensus algorithms, cryptography, and the HoneyBadgerBFT.
Milestones and Deliverables:
Year 1:
Literature Review: Review of existing literature on asynchronous consensus algorithms, byzantine fault tolerance, and the HoneyBadgerBFT.
Theoretical Foundation: Develop a deep understanding of the cryptographic techniques and theoretical basis of the HoneyBadgerBFT.
Year 2:
Performance Analysis: Design simulations to compare the performance of HoneyBadgerBFT with other asynchronous consensus algorithms in terms of latency, throughput, and scalability.
Limitations and Challenges: Identify and analyze the limitations and challenges of the HoneyBadgerBFT from both theoretical and practical standpoint.
Year 3:
Optimizations: Investigate potential optimizations to enhance the efficiency and scalability of HoneyBadgerBFT without compromising security.
Real-World Viability: Explore practical implementations for deploying HoneyBadgerBFT in real-world scenarios.
Year 4:
Applications: Investigate potential applications beyond blockchain where HoneyBadgerBFT's privacy-preserving properties can be leveraged.
 Dissertation Preparation: Compile research findings, experiments, and insights into a comprehensive PhD Dissertation.
Scheduled Completions:
Literature Review and Theoretical Foundation: Year 1
Performance Analysis and Limitations Study: Year 2
Optimization Strategies and Real-World Viability: Year 3
Applications Exploration and Dissertation Preparation: Year 4
	This research will contribute to the understanding of asynchronous consensus algorithms. It aims to provide insights into the HoneyBadgerBFT protocol and its potential impact on various distributed systems beyond blockchain. Through analysis, experimentation, and documentation, this research aims to advance the field of decentralized asynchronous consensus protocols.























References

Baird, L., & Luykx, A. (2020). The Hashgraph Protocol: Efficient Asynchronous BFT for High-Throughput Distributed Ledgers. International Conference on Omni-layer Intelligent Systems, pp. 1-7. https://doi.org/10.1109/COINS49042.2020.9191430

Duan, S., Reiter, M., & Zhang, H. (2018). BEAT: Asynchronous BFT Made Practical. In ACM SIGSAC Conference on Computer and Communications Security, pp. 2028–2041. https://doi.org/10.1145/3243734.3243812

Hood, K., Oglio, J., Nesterenko, M., & Sharma, G. (2021). Partitionable Asynchronous Cryptocurrency Blockchain. IEEE International Conference on Blockchain and Cryptocurrency, pp. 1-9. https://doi.org/10.1109/ICBC51069.2021.9461080

Knudsen, H., Li, J., Notland, J., Haro, P., & Ræder, T. (2021). High-Performance Asynchronous Byzantine Fault Tolerance Consensus Protocol. IEEE International Conference on Blockchain, pp. 476-483. https://doi.org/10.1109/Blockchain53845.2021.00073

Miller, A., Xia, Y., Croman, K., Shi, E., & Song, D. (2016). The Honey Badger of BFT Protocols. Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, pp. 31–42. https://doi.org/10.1145/2976749.2978399
